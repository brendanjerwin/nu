<?xml version="1.0" encoding="utf-8" ?>
<castle>
	<components>

		<component id="dispatcher"
			lifestyle="singleton"
			type="nu.Dispatcher, nu" />

    <!-- Commands -->
    
		<component id="help"
				   lifestyle="singleton"
				   service="nu.Commands.ICommand, nu"
				   type="nu.Commands.HelpCommand, nu" />

    <component id="project"
				   lifestyle="singleton"
				   service="nu.Commands.ICommand, nu"
				   type="nu.Commands.NewProjectCommand, nu">
      <parameters>
        <rootTemplateDirectory>config\project\</rootTemplateDirectory>
        <defaultTemplate>cs-20</defaultTemplate>
      </parameters>
    </component>

    <component id="list"
       lifestyle="singleton"
       service="nu.Commands.ICommand, nu"
       type="nu.Commands.ListCommand, nu" />

		<component id="inject"
				   lifestyle="singleton"
				   service="nu.Commands.ICommand, nu"
				   type="nu.Commands.InjectCommand, nu" />
    
    <!-- Arguements -->

		<component id="argumentParser"
				   lifestyle="transient"
				   service="nu.Utility.IArgumentParser, nu"
				   type="nu.Utility.ArgumentParser, nu"/>

		<component id="argumentMapFactory"
				   lifestyle="transient"
				   service="nu.Utility.IArgumentMapFactory, nu"
				   type="nu.Utility.ArgumentMapFactory, nu"/>
    
    <!-- Screen -->

    <component id="consoleHelper"
       lifestyle="transient"
       service="nu.Utility.IConsole, nu"
       type="nu.Utility.ConsoleHelper, nu"/>

    <!-- I/O -->

    <component id="pathAdapter"
               lifestyle="transient"
               service="nu.Utility.IPath, nu"
               type="nu.Utility.PathAdapter, nu" />

    <component id="fileSystem"
               lifestyle="transient"
               service="nu.IFileSystem, nu"
               type="nu.Utility.FileSystem, nu" />
    
    <!-- Template -->
    
    <component id="templateProcessor"
       lifestyle="transient"
       service="nu.Model.Template.ITemplateProcessor, nu"
       type="nu.Model.Template.NVelocityAdapter, nu" />
    
    <!-- Local Package -->

    <component id="Package.LocalPackageRepository"
       lifestyle="transient"
       service="nu.Model.Package.ILocalPackageRepository, nu"
       type="nu.Model.Package.LocalPackageRepository, nu"/>
    
    <!-- New Project -->

    <component id="xmlProjectPersister"
               lifestyle="transient"
               service="nu.Model.Project.IProjectManifestStore, nu"
               type="nu.Model.Project.Persistence.XmlProjectManifestStore, nu" />

    <component id="folderTransformation"
               lifestyle="transient"
               service="nu.Model.Project.Transformation.AbstractTransformationElement, nu"
               type="nu.Model.Project.Transformation.FolderTransformationElement, nu" />

    <component id="fileTransformation"
           lifestyle="transient"
           service="nu.Model.Project.Transformation.AbstractTransformationElement, nu"
           type="nu.Model.Project.Transformation.FileTransformationElement, nu" />
               
    <component id="transformationPipeline"
               lifestyle="transient"
               service="nu.Model.Project.Transformation.IProjectTransformationPipeline, nu"
               type="nu.Model.Project.Transformation.ProjectTransformationPipeline, nu">
      <parameters>
        <elements>
          <array>
            <item>${folderTransformation}</item>
            <item>${fileTransformation}</item>
          </array>
        </elements>
      </parameters>
    </component>
    
	</components>
</castle>